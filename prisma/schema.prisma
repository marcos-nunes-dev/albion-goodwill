generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model DailyActivity {
  id                        String   @id @default(uuid())
  userId                    String
  guildId                   String
  username                  String
  date                      DateTime @db.Date
  messageCount              Int      @default(0)
  voiceTimeSeconds          Int      @default(0)
  afkTimeSeconds            Int      @default(0)
  mutedDeafenedTimeSeconds  Int      @default(0)
  lastUpdated              DateTime @default(now()) @db.Timestamptz

  @@unique([userId, guildId, date])
  @@map("daily_activity")
}

model WeeklyActivity {
  id                        String   @id @default(uuid())
  userId                    String
  guildId                   String
  username                  String
  weekStart                 DateTime @db.Date
  messageCount              Int      @default(0)
  voiceTimeSeconds          Int      @default(0)
  afkTimeSeconds            Int      @default(0)
  mutedDeafenedTimeSeconds  Int      @default(0)
  lastUpdated              DateTime @default(now()) @db.Timestamptz

  @@unique([userId, guildId, weekStart], map: "weekly_activity_user_guild_week")
  @@map("weekly_activity")
}

model MonthlyActivity {
  id                        String   @id @default(uuid())
  userId                    String
  guildId                   String
  username                  String
  monthStart                DateTime @db.Date
  messageCount              Int      @default(0)
  voiceTimeSeconds          Int      @default(0)
  afkTimeSeconds            Int      @default(0)
  mutedDeafenedTimeSeconds  Int      @default(0)
  lastUpdated              DateTime @default(now()) @db.Timestamptz

  @@unique([userId, guildId, monthStart], map: "monthly_activity_user_guild_month")
  @@map("monthly_activity")
}

model VoiceSession {
  id                  String   @id @default(uuid())
  userId              String
  guildId             String
  username            String
  channelId           String
  isAfk               Boolean  @default(false)
  isMutedOrDeafened   Boolean  @default(false)
  joinTime            DateTime @db.Timestamptz
  lastStatusChange    DateTime @db.Timestamptz
  isActive            Boolean  @default(true)

  @@map("voice_sessions")
}

model GuildSettings {
  id                String   @id @default(uuid())
  guildId           String   @unique
  guildName         String
  afkChannelId      String?
  commandPrefix     String   @default("!albiongw")
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("guild_settings")
} 